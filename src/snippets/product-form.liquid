{% comment %} :: BUY BUTTON - What Text to Show :: {% endcomment %}
{% assign call_to_action = 'products.product.add_to_cart' | t %}
{% unless current_variant.available %}
  {% assign call_to_action = 'products.product.sold_out' | t %}
{% endunless %}


{% comment %} :: SAFETY CHECK - PDP Merge Vars :: Checks for 'product-merger' passed vars & stubs if missing, product-form used more than in just product-template section {% endcomment %}
{% if productVariants == blank %}
  {% comment %} :: VARIANTS VAR :: Build variants var if not present yet, in case we use this places other than product-template.liquid {% endcomment %}
  {% assign productVariants = product.variants %}
{% endif %}

{% if productTags == blank %}
  {% comment %} :: MERGED TAGS :: Fallback to product.tags if array isn't present for whatever reason {% endcomment %}
  {% assign productTags = product.tags %}
{% endif %}

{% if productInfo == blank %}
  {%- capture productInfo -%}
    {
      {%- for variant in productVariants %}
        {{- variant.id -}}:{
          "description":{{ product.description | json }},
          "title":{{ product.title | json }}
        }{% unless forloop.last == true %},{% endunless %}
      {%- endfor -%}
    }
  {%- endcapture -%}
{% endif %}

{% if option1_values == blank %}
  {% comment %} :: OPTION VARS :: Builds 'option#_name' & option#_values' to use with product-form {% endcomment %}
  {% include 'product-merger-util--option-values' %}
{% endif %}




{% comment %} :: PDP-MERGER - Pass Data to Theme.js :: {% endcomment %}
<script class="product-json" type="text/javascript">
  var productObj = {{ product | json }};

  // MERGE : Overwrite parent product variants + tags with merged set or fallback data (itself)
  productObj.variants = {{ productVariants | json }}; // Safe b/c of check above
  productObj.tags = {{ productTags | json }};
  productObj.info = {{ productInfo }};

  // THEME.JS ACCESS : Pass product json to an accessable global for theme.js to ingest
  if ( !window.Shopify ) {
    window.Shopify = {};
  }
  window.Shopify.productObj = productObj;
</script>



{% comment %} :: PRODUCT FORM :: {% endcomment %}
{% form 'product', product, id: "AddToCartForm", class: "product_form", data-product-form:product_form_config %}

  {%- if settings.show_multiple_currencies -%}
    {% assign price = current_variant.price | money_with_currency %}
    {% assign affirmprice = current_variant.price %}
    {% assign compare_price = current_variant.compare_at_price | money_with_currency %}
  {%- else -%}
    {% assign price = current_variant.price | money %}
    {% assign affirmprice = current_variant.price %}
    {% assign compare_price = current_variant.compare_at_price | money %}
  {%- endif -%}


  {% comment %} :: PRICE - SALE :: {% endcomment %}
  {% if current_variant.compare_at_price > current_variant.price %}

    <div id="product-price" class="has-compare-price">
      <span class="product-price" itemprop="price">
        <span class="money bfx-price" style="color: #ff0000;">{{ price }}</span>
      </span>
        <span class="was">
          <span class="money bfx-price">{{ compare_price }}</span>
        </span>
    </div>

  {% comment %} :: PRICE - FULL :: {% endcomment %}
  {% else %}

    <div id="product-price">
      <span class="product-price" itemprop="price">
        <span class="money bfx-price">{{ price }}</span>
      </span>
    </div>

  {% endif %}



  {% comment %} :: REVIEWS - STAR RATING :: {% endcomment %}
  {% if settings.app_wk_enabled %}
    <div class="product-star-rating">
      {% include 'bazarvoice-reviews-aggregate' %}
    </div>
  {% endif %}


  <div class="clear"></div>

  
  <div class="installments-part">
    {% comment %} <p class="installment-pay">or 4 installments of $$$ by afterpaya</p> {% endcomment %}
     <p class="installment-pay affirm-as-low-as" data-page-type="product" data-amount="{{ affirmprice }}"></p>
    <script>
      var selectCallback = function(variant, selector) {

        //Affirm Promos: Monthly Payment Messaging, dynamic pricing embed code
        //
        //NOTE: This Affirm embed code is only needed if you are using product variants.
        //'selectCallback' might not be in your product.liquid template if product variants are not used or supported.
        //If you are using product variants in your shop, use the following code to dynamically update your Monthly Payment Messaging when the customer selects a different product variant.

        $('.affirm-as-low-as').attr('data-amount',variant.price);
        affirm.ui.refresh();

      };

    </script>
  </div>

  <div class="clear"></div>

  {% comment %}
  :: OPTIONS LOGIC - Many x Many ::
  -------------------
    1. Option Sets: Multiple
    2. Variant Count: Multiple

    EX: "Size" (7,8,9,10) & "Color" (Red, Green, Blue)
    PDP-MERGE NOTE : Options must be congruent to do a merge, so its okay to use product object when checking OPTIONS only
  {% endcomment %}
  {% if product.options.size > 0 %}

    {% comment %} :: OPTIONS DISPLAY - SWATCHES :: {% endcomment %}
    {% if section.settings.variant_display_type == 'swatches' %}

      {% comment %} :: VARIANT ID INDICATOR :: (Tells 'addToCart' which variant ID to add, updates via js) {% endcomment %}
      <input
        id="selected-variant-id"
        type="hidden"
        name="id"
        value="{{ current_variant.id }}" />

      {% comment %} :: BUILD - Swatch Elements for Option #1 :: (separate as we can't build liquid-usable objects using liquid){% endcomment %}
      {% if option1_name != blank %}
        {% include 'option-picker',
          option_name: option1_name,
          option_position: 1,
          option_values: option1_values,
          product_variants: productVariants %}
      {% endif %}

      {% comment %} :: BUILD - Swatch Elements for Option #2 :: {% endcomment %}
      {% if option2_name != blank %}
        {% include 'option-picker',
          option_name: option2_name,
          option_position: 2,
          option_values: option2_values,
          product_variants: productVariants %}
      {% endif %}

      {% comment %} :: BUILD - Swatch Elements for Option #3 :: {% endcomment %}
      {% if option3_name != blank %}
        {% include 'option-picker',
          option_name: option3_name,
          option_position: 3,
          option_values: option3_values,
          product_variants: productVariants %}
      {% endif %}

      {% comment %} :: BUILD - Swatch Elements for Extra Options :: (remember, 3 variant levels max, these are usually customizations and such) {% endcomment %}
      {% if extraOption_name != blank %}
        {% include 'option-picker',
          option_name: extraOption_name,
          option_position: 4,
          option_values: extraOption_values,
          product_variants: productVariants %}
      {% endif %}


    {% comment %} :: OPTIONS DISPLAY - DROP-DOWNS :: {% endcomment %}
    {% else %}
      {% include 'option-select' %}
    {% endif %}



  {% comment %}
  :: OPTIONS LOGIC - One x Many ::
  -------------------
    1. Option Sets: Single
    2. Variant Count: Multiple

    EX: "Color" (Red, Green, Blue)
  {% endcomment %}
  {% elsif product.options.size == 1 and productVariants.size > 1 %}

    {% comment %} :: OPTION DISPLAY - SWATCH :: {% endcomment %}
    {% if section.settings.variant_display_type == 'swatches' %}
      {% include 'option-picker',
        option_name: option1_name,
        option_position: 1,
        option_values: option1_values,
        product_variants: productVariants %}


    {% comment %} :: OPTION DISPLAY - DROP-DOWN :: {% endcomment %}
    {% else %}
      {% include 'option-select' %}
    {% endif %}



  {% comment %}
    :: OPTIONS LOGIC - One x One ::
  -------------------
    1. Option Sets: Single
    2. Variant Count: Single

    EX: One item with no variants / options (technically ONE variant, but yeah)
    NOTE: Single item select so the form data still parses properly
  {% endcomment %}
  {% elsif productVariants.size == 1 %}

    {% comment %} :: Display Single Variant Info (So form data still works) :: {% endcomment %}
    {% include 'option-select' %}




  {% comment %}
    :: OPTIONS LOGIC - SAFETY CATCH ALL ::
  -------------------
    1. Option Sets: ???
    2. Variant Count: ???

    EX: Safety net, not sure honestly how we'd end up here unless product.variants was broken?
  {% endcomment %}
  {% else %}
    <div class="what-is-it">
      {% if product.options.first != 'Title' %}
        <label>{{ product.options.first }}:</label>
        {% for variant in productVariants %}
          <span class="it-is">{{ variant.option1 | escape }}</span>
        {% endfor %}
      {% endif %}
    </div>
    <div class="product-variants"></div><!-- product variants -->
    <input  type="hidden" id="{{ productVariants[0].id }}" name="id" data-sku="{{ productVariants[0].sku }}" value="{{ productVariants[0].id }}" />

  {% endif %}
  {% comment %} :: END - OPTIONS LOGIC SETS :: {% endcomment %}


  <div class="clear"></div>


  {% comment %} :: SKU :: {% endcomment %}
  {% if section.settings.show_sku %}
    <div class="sku">
      <label style="line-height: 1.6em;">{{ 'customer.order.details.sku' | t }}:</label> <span class="variant_sku">{{ current_variant.sku }}</span>
    </div><div class="clear"></div>
  {% endif %}

  {% comment %}{% if product_type == 'gift card' %}
        <hr class="product-hr">
        <div class="gift-card-form">
            <div id="giftcard_sender-email" class="clearfix large-form">
                <input required type="email" value="" placeholder="Sender's Email" name="properties[Sender Email]" id="sender-email" class="large form-field" size="60">
            </div>
            <div id="giftcard_recipient-email" class="clearfix large-form">
                <input required type="email" value="" placeholder="Recipient's Email" name="properties[Recipient Email]" id="recipient-email" class="large form-field" size="60">
            </div>
            <div id="giftcard_message" class="clearfix large-form">
                <textarea id="message" name="properties[Message]" class="large form-field" placeholder="Message (Optional)" style="width: 100%; min-height: 75px;"></textarea>
            </div>
        </div>
        <div class="clear"></div>
    {% endif %}{% endcomment %}


  {% assign has_unavailable = false %}

  {% for variant in productVariants %}
    {% unless variant.available %}
      {% assign has_unavailable = true %}
      {% break %}
    {% endunless %}
  {% endfor %}

  {% if has_unavailable %}
     <a class="link" href="#" id="BIS_trigger">Is your size out of stock?</a>

     <script type="text/javascript">
      // Check to see which domain we are currently on
      var domainLocale = window.theme.Utils.domainCookie();

      // BUILD : Append the 'hide' class if we are on DE
      if(domainLocale == 'de'){
        var bisLink = document.querySelector('#BIS_trigger');
        bisLink = bisLink.classList.add("hide");
      }
    </script>
  {% endif %}


  {% comment %} :: ADD TO CART ::{% endcomment %}
  {% if product.available %}{% endif %}
    <div id="product-add">
      {% if section.settings.show_quantity %}
        <div class="quanity-select">
          <label for="quantity">{{ 'products.product.quantity' | t }}</label>
          <input min="1" type="number" id="quantity" name="quantity" value="1" />
        </div>
      {% endif %}

      {% if section.settings.show_payment_button %}<div class="clear"></div>{% endif %}
      <input type="submit" name="button" class="add clearfix AddtoCart{% if section.settings.show_payment_button %} secondary-button{% endif %}" value="{{ call_to_action }}" {% unless current_variant.available %}disabled{% endunless %} />
      {% if section.settings.show_payment_button %}
       {{ form | payment_button }}
      {% endif %}

    </div>
    <p class="add-to-cart-msg"></p>

  <div class="clear"></div>

  {% comment %}{- Record collection -}{% endcomment %}
  <input
    readonly
    type="hidden"
    name="properties[_collection_private]"
    value="{{ collection.title }}" />

  <input
    readonly
    type="hidden"
    name="properties[_collection_handle_private]"
    value="{{ collection.handle }}" />

{% endform %}
